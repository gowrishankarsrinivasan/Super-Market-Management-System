{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Your Cart\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"total\"\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Your cart is empty.\", -1 /* HOISTED */);\nconst _hoisted_9 = [_hoisted_8];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $data.cartItems.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"cart-item\"\n    }, [_createElementVNode(\"img\", {\n      src: item.image,\n      alt: \"item.name\"\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"div\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(item.price), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.quantity = $event,\n      onChange: $event => $options.updateQuantity(item),\n      min: \"1\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4), [[_vModelText, item.quantity, void 0, {\n      number: true\n    }]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeFromCart(item.id)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_6, \"Total: \" + _toDisplayString($options.totalPrice), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.checkout && $options.checkout(...args))\n  }, \"Checkout\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [..._hoisted_9]))]);\n}","map":{"version":3,"names":["_createElementVNode","key","class","_hoisted_8","_createElementBlock","_hoisted_1","$data","cartItems","length","_hoisted_2","_Fragment","_renderList","item","id","src","image","alt","_hoisted_3","_toDisplayString","name","price","type","$event","quantity","onChange","$options","updateQuantity","min","_hoisted_4","number","onClick","removeFromCart","_hoisted_5","_hoisted_6","totalPrice","_cache","args","checkout","_hoisted_7","_hoisted_9"],"sources":["D:\\E-commerce\\FrontEnd\\my-vue3-project\\src\\components\\CartComponent.vue"],"sourcesContent":["<!-- <template>\r\n    <v-container>\r\n        <v-data-table :items=\"items\" :items-per-page=\"5\" :headers=\"headers\">\r\n            <template v-slot:top>\r\n                <v-toolbar flat>\r\n                    <v-toolbar-title>Item List</v-toolbar-title>\r\n                    <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n                    <v-spacer></v-spacer>\r\n                    <v-dialog v-model=\"dialog\" max-width=\"500px\">\r\n                        <template v-slot:activator=\"{ on, attrs }\">\r\n                            <v-btn color=\"primary\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">\r\n                                Add Item\r\n                            </v-btn>\r\n                        </template>\r\n\r\n                        <v-card>\r\n                            <v-card-title>\r\n                                <span class=\"headline\">Add New Item</span>\r\n                            </v-card-title>\r\n                            <v-card-text>\r\n                                <v-container>\r\n                                    <v-row>\r\n                                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                                            <v-text-field v-model=\"newItem.name\" label=\"Item Name\"></v-text-field>\r\n                                        </v-col>\r\n                                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                                            <v-text-field v-model=\"newItem.price\" label=\"Price\"></v-text-field>\r\n                                        </v-col>\r\n                                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                                            <v-text-field v-model=\"newItem.quantity\" label=\"Quantity\"></v-text-field>\r\n                                        </v-col>\r\n                                    </v-row>\r\n                                </v-container>\r\n                            </v-card-text>\r\n                            <v-card-actions>\r\n                                <v-spacer></v-spacer>\r\n                                <v-btn @click=\"dialog = false\">Cancel</v-btn>\r\n                                <v-btn @click=\"addItem\" color=\"primary\">Save</v-btn>\r\n                            </v-card-actions>\r\n                        </v-card>\r\n                    </v-dialog>\r\n                </v-toolbar>\r\n            </template>\r\n\r\n            <template v-slot:[`item.actions`]=\"{ item }\">\r\n                <div class=\"d-flex justify-space-between align-center\">\r\n                    <v-btn @click=\"editItem(item)\">\r\n                        <v-icon>mdi-pencil</v-icon>\r\n                    </v-btn>\r\n                    <v-btn @click=\"deleteItem(item)\">\r\n                        <v-icon>mdi-delete</v-icon>\r\n                    </v-btn>\r\n                </div>\r\n            </template>\r\n\r\n\r\n        </v-data-table>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"CartComponent\",\r\n    data() {\r\n        return {\r\n            dialog: false,\r\n            headers: [\r\n                { text: 'Item Name', value: 'name' },\r\n                { text: 'Price', value: 'price' },\r\n                { text: 'Quantity', value: 'quantity' },\r\n                { text: 'Actions', value: 'actions', sortable: false },\r\n            ],\r\n            items: [\r\n                // Sample data, replace with your actual data\r\n                { name: 'Item 1', price: 100, quantity: 2 },\r\n                { name: 'Item 2', price: 200, quantity: 5 },\r\n            ],\r\n            newItem: {\r\n                name: '',\r\n                price: '',\r\n                quantity: ''\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        addItem() {\r\n            if (this.newItem.name && this.newItem.price && this.newItem.quantity) {\r\n                this.items.push({ ...this.newItem });\r\n                this.newItem.name = '';\r\n                this.newItem.price = '';\r\n                this.newItem.quantity = '';\r\n                this.dialog = false;\r\n            } else {\r\n                alert('Please fill out all fields');\r\n            }\r\n        },\r\n        editItem(item) {\r\n            // Add your edit logic here\r\n            alert(`Edit ${item.name}`);\r\n        },\r\n        deleteItem(item) {\r\n            this.items = this.items.filter(i => i !== item);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.headline {\r\n    font-weight: bold;\r\n}\r\n</style> -->\r\n\r\n\r\n// src/components/Cart.vue\r\n<template>\r\n    <div>\r\n        <h1>Your Cart</h1>\r\n        <div v-if=\"cartItems.length\">\r\n            <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\r\n                <img :src=\"item.image\" alt=\"item.name\" />\r\n                <div>{{ item.name }}</div>\r\n                <div>{{ item.price }}</div>\r\n                <input type=\"number\" v-model.number=\"item.quantity\" @change=\"updateQuantity(item)\" min=\"1\"/>\r\n                <button @click=\"removeFromCart(item.id)\">Remove</button>\r\n            </div>\r\n            <div class=\"total\">Total: {{ totalPrice }}</div>\r\n            <button @click=\"checkout\">Checkout</button>\r\n        </div>\r\n        <div v-else>\r\n            <p>Your cart is empty.</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            cartItems: []\r\n        };\r\n    },\r\n    computed: {\r\n        totalPrice() {\r\n            return this.cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\r\n        }\r\n    },\r\n    methods: {\r\n        removeFromCart(id) {\r\n            this.cartItems = this.cartItems.filter(item => item.id !== id);\r\n        },\r\n        updateQuantity(item) {\r\n            if (item.quantity <= 0) {\r\n                this.removeFromCart(item.id);\r\n            }\r\n        },\r\n        checkout() {\r\n            // Implement checkout logic here\r\n        }\r\n    },\r\n    mounted() {\r\n        // Assuming the cart items are stored in local storage\r\n        const storedCartItems = JSON.parse(localStorage.getItem('cart')) || [];\r\n        this.cartItems = storedCartItems;\r\n    },\r\n    watch: {\r\n        cartItems: {\r\n            handler(newCartItems) {\r\n                localStorage.setItem('cart', JSON.stringify(newCartItems));\r\n            },\r\n            deep: true\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n.cart-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n}\r\n.cart-item img {\r\n    width: 50px;\r\n    height: 50px;\r\n    margin-right: 10px;\r\n}\r\n.total {\r\n    font-weight: bold;\r\n    margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":";gCAqHQA,mBAAA,CAAkB,YAAd,WAAS;;EArHrBC,GAAA;AAAA;mBAAA;mBAAA;mBAAA;;EA8HiBC,KAAK,EAAC;AAAO;;EA9H9BD,GAAA;AAAA;gCAkIYD,mBAAA,CAA0B,WAAvB,qBAAmB;oBAAtBG,UAA0B,C;;uBAdlCC,mBAAA,CAgBM,cAfFC,UAAkB,EACPC,KAAA,CAAAC,SAAS,CAACC,MAAM,I,cAA3BJ,mBAAA,CAUM,OAhIdK,UAAA,I,kBAuHYL,mBAAA,CAMMM,SAAA,QA7HlBC,WAAA,CAuHgCL,KAAA,CAAAC,SAAS,EAAjBK,IAAI;yBAAhBR,mBAAA,CAMM;MAN0BH,GAAG,EAAEW,IAAI,CAACC,EAAE;MAAEX,KAAK,EAAC;QAChDF,mBAAA,CAAyC;MAAnCc,GAAG,EAAEF,IAAI,CAACG,KAAK;MAAEC,GAAG,EAAC;4BAxH3CC,UAAA,GAyHgBjB,mBAAA,CAA0B,aAAAkB,gBAAA,CAAlBN,IAAI,CAACO,IAAI,kBACjBnB,mBAAA,CAA2B,aAAAkB,gBAAA,CAAnBN,IAAI,CAACQ,KAAK,kB,gBAClBpB,mBAAA,CAA4F;MAArFqB,IAAI,EAAC,QAAQ;MA3HpC,uBAAAC,MAAA,IA2HqDV,IAAI,CAACW,QAAQ,GAAAD,MAAA;MAAGE,QAAM,EAAAF,MAAA,IAAEG,QAAA,CAAAC,cAAc,CAACd,IAAI;MAAGe,GAAG,EAAC;6CA3HvGC,UAAA,I,cA2HqDhB,IAAI,CAACW,QAAQ,E;MA3HlEM,MAAA,EA2HqC;IAA8B,E,IACnD7B,mBAAA,CAAwD;MAA/C8B,OAAK,EAAAR,MAAA,IAAEG,QAAA,CAAAM,cAAc,CAACnB,IAAI,CAACC,EAAE;OAAG,QAAM,iBA5H/DmB,UAAA,E;kCA8HYhC,mBAAA,CAAgD,OAAhDiC,UAAgD,EAA7B,SAAO,GAAAf,gBAAA,CAAGO,QAAA,CAAAS,UAAU,kBACvClC,mBAAA,CAA2C;IAAlC8B,OAAK,EAAAK,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEX,QAAA,CAAAY,QAAA,IAAAZ,QAAA,CAAAY,QAAA,IAAAD,IAAA,CAAQ;KAAE,UAAQ,E,oBAEtChC,mBAAA,CAEM,OAnIdkC,UAAA,MAAAC,UAAA,I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}