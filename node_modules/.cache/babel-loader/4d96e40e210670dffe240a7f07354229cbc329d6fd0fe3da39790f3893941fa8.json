{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createElementVNode(\"h1\", null, \"Product ID: \" + _toDisplayString($props.productId), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_row","_component_v_col","_createElementVNode","_toDisplayString","$props","productId","_"],"sources":["D:\\Inventory-management\\Frontend\\src\\components\\ProductDetails.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n        <v-row>\r\n            <v-col>\r\n                <h1>Product ID: {{ productId }}</h1>\r\n            </v-col>\r\n        </v-row>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ProductDetail',\r\n    props: {\r\n        productId: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n    }, methods: {\r\n        async fetchProductDetails() {\r\n            try {\r\n                // Replace with the actual URL to fetch the product details\r\n                const response = await fetch('http://localhost:3000/products/2');\r\n                // if (!response.ok) {\r\n                //     throw new Error(`HTTP error! status: ${response.status}`);\r\n                // }\r\n                const data = await response.json();\r\n                console.log(data);\r\n                this.product = data.products.find(product => product.id === this.productId);\r\n            } catch (error) {\r\n                console.error('Error fetching product details:', error);\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        console.log('Product ID:', this.productId);\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your styles here if needed */\r\n</style>"],"mappings":";;;;;uBACIA,YAAA,CAMcC,sBAAA;IAPlBC,OAAA,EAAAC,QAAA,CAEQ,MAIQ,CAJRC,YAAA,CAIQC,gBAAA;MANhBH,OAAA,EAAAC,QAAA,CAGY,MAEQ,CAFRC,YAAA,CAEQE,gBAAA;QALpBJ,OAAA,EAAAC,QAAA,CAIgB,MAAoC,CAApCI,mBAAA,CAAoC,YAAhC,cAAY,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,SAAS,iB;QAJ5CC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}