{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  return _openBlock(), _createBlock(_component_v_data_table, {\n    \"custom-filter\": $options.filterOnlyCapsText,\n    headers: _ctx.headers,\n    items: _ctx.items,\n    search: _ctx.search,\n    \"item-value\": \"name\"\n  }, {\n    top: _withCtx(() => [_createVNode(_component_v_text_field, {\n      modelValue: _ctx.search,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.search = $event),\n      class: \"pa-2\",\n      label: \"Search (UPPER CASE ONLY)\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"custom-filter\", \"headers\", \"items\", \"search\"]);\n}","map":{"version":3,"names":["_createBlock","_component_v_data_table","$options","filterOnlyCapsText","headers","_ctx","items","search","top","_withCtx","_createVNode","_component_v_text_field","modelValue","_cache","$event","class","label","_"],"sources":["D:\\Inventory-management\\Frontend\\src\\components\\StockComponent.vue"],"sourcesContent":["<template>\r\n    <v-data-table :custom-filter=\"filterOnlyCapsText\" :headers=\"headers\" :items=\"items\" :search=\"search\"\r\n        item-value=\"name\">\r\n        <template v-slot:top>\r\n            <v-text-field v-model=\"search\" class=\"pa-2\" label=\"Search (UPPER CASE ONLY)\"></v-text-field>\r\n        </template>\r\n    </v-data-table>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data: () => ({\r\n        search: '',\r\n        headers: [\r\n            {\r\n                text: 'Name',\r\n                align: 'name',\r\n                value: 'name',  // 'value' should match the property name in the item\r\n            },\r\n            {\r\n                text: 'Stock',\r\n                align: 'end',\r\n                value: 'stock',  // 'value' should match the property name in the item\r\n            },\r\n            {\r\n                text: 'Reorder Point',\r\n                align: 'end',\r\n                value: 'reorderPoint',  // 'value' should match the property name in the item\r\n            },\r\n            {\r\n                text: 'Date Added',\r\n                align: 'end',\r\n                value: 'dateAdded',  // 'value' should match the property name in the item\r\n            }\r\n        ],\r\n        items: [],\r\n    }),\r\n    created() {\r\n        this.fetchProducts();\r\n    },\r\n    methods: {\r\n        async fetchProducts() {\r\n            try {\r\n                const response = await fetch('http://localhost:3000/products');\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error: ${response.status}`);\r\n                }\r\n                const product = await response.json();\r\n                this.items = product;\r\n            } catch (error) {\r\n                console.error('Failed to fetch products:', error.message);\r\n            }\r\n        },\r\n        filterOnlyCapsText(value, query) {\r\n            return value != null &&\r\n                query != null &&\r\n                typeof value === 'string' &&\r\n                value.toUpperCase().indexOf(query) !== -1;\r\n        },\r\n    },\r\n}\r\n</script>\r\n"],"mappings":";;;;uBACIA,YAAA,CAKeC,uBAAA;IALA,eAAa,EAAEC,QAAA,CAAAC,kBAAkB;IAAGC,OAAO,EAAEC,IAAA,CAAAD,OAAO;IAAGE,KAAK,EAAED,IAAA,CAAAC,KAAK;IAAGC,MAAM,EAAEF,IAAA,CAAAE,MAAM;IAC/F,YAAU,EAAC;;IACMC,GAAG,EAAAC,QAAA,CAChB,MAA4F,CAA5FC,YAAA,CAA4FC,uBAAA;MAJxGC,UAAA,EAImCP,IAAA,CAAAE,MAAM;MAJzC,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAImCT,IAAA,CAAAE,MAAM,GAAAO,MAAA;MAAEC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;;IAJ9DC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}